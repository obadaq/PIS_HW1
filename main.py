# -*- coding: utf-8 -*-
"""HW1.1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EHPuUdp_YsdrquTPv5ZmotnvZ4dUUIXc
"""


# this function creat a word histogram for a specified string
def wordHistogram(orgStr):
    lorgStr = orgStr.lower()
    irrelevant_word = ["\n", ".", ",", "? ", "! ", "the ", "a ", " for ", "by ", "and ", "to ", "in ",
                       "with ", "is ", "of ", "this ", "was ", "all ", "as", "its", 'that']

    for irwd in irrelevant_word:
        lorgStr = lorgStr.replace(irwd, " ")

    word_list = lorgStr.split(" ")
    # print(word_list)

    word_histogram = {}
    for word in word_list:
        if word not in word_histogram.keys():
            word_histogram[word] = 1
        else:
            word_histogram[word] = word_histogram[word] + 1

    word_histogram.pop("")
    return word_histogram


def Nmaxelements(list1, list2, N):
    final_list = []

    for i in range(0, N):
        max1 = 0

        for j in range(len(list1)):
            if list1[j] > max1:
                max1 = list1[j];
                'indexxx.append(list2[j])'

        list1.remove(max1);
        final_list.append(max1)
    return final_list


import os

data_folder = os.path.join(os.getcwd(), 'articles')
data = []
for root, folder, files in os.walk(data_folder):
    for file in files:
        path = os.path.join(root, file)
        with open(path) as inf:
            data.append(inf.read())

filesHistograms = []
i = 0
for hists in data:
    filesHistograms.append(wordHistogram(data[i]))
    i += 1

l = 0
m = []
for k in filesHistograms:
    maxValues = Nmaxelements(list(filesHistograms[l].values()), list(filesHistograms[l].keys()), 5)
    m = [keyWord for keyWord, valuee in filesHistograms[l].items() if valuee == maxValues]
    l += 1
    print(maxValues)

